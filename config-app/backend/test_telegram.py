#!/usr/bin/env python3
"""
Script de teste para notificaÃ§Ãµes Telegram
"""

from services.telegram_notifier import telegram, notify, alert, device_status
import time

def test_telegram():
    print("ðŸ”§ Testando notificaÃ§Ãµes Telegram...")
    
    # 1. Teste de mensagem simples
    print("\n1. Enviando mensagem simples...")
    if notify("âœ… Teste de notificaÃ§Ã£o do AutoCore!"):
        print("   âœ“ Mensagem enviada")
    else:
        print("   âœ— Falha ao enviar")
        print("   Verifique TELEGRAM_BOT_TOKEN e TELEGRAM_CHAT_ID no .env")
        return
    
    time.sleep(1)
    
    # 2. Teste de alerta
    print("\n2. Enviando alerta...")
    if alert("Teste de Alerta", "Este Ã© um teste do sistema de alertas", "WARNING"):
        print("   âœ“ Alerta enviado")
    
    time.sleep(1)
    
    # 3. Teste de status de dispositivo
    print("\n3. Enviando status de dispositivo...")
    if device_status("ESP32_Relay_93ce30", "online", "IP: 192.168.1.100"):
        print("   âœ“ Status enviado")
    
    time.sleep(1)
    
    # 4. Teste de mensagem de inicializaÃ§Ã£o
    print("\n4. Enviando mensagem de startup...")
    if telegram.send_startup_message():
        print("   âœ“ Startup enviado")
    
    time.sleep(1)
    
    # 5. Teste de aÃ§Ã£o de relÃ©
    print("\n5. Enviando aÃ§Ã£o de relÃ©...")
    if telegram.notify_relay_action(1, "ON", "ESP32_Relay_93ce30"):
        print("   âœ“ AÃ§Ã£o de relÃ© enviada")
    
    print("\nâœ… Todos os testes concluÃ­dos!")
    print("Verifique seu Telegram para ver as mensagens")

if __name__ == "__main__":
    test_telegram()