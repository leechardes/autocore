#!/bin/bash

# Script de verifica√ß√£o r√°pida do status do AutoCore
# Executa no Raspberry Pi para diagnosticar problemas

echo "üîç AutoCore - Verifica√ß√£o de Status"
echo "===================================="
echo ""
echo "üìÖ $(date)"
echo "üñ•Ô∏è $(hostname) - $(hostname -I | awk '{print $1}')"
echo ""

# Verificar servi√ßos
echo "üìä Status dos Servi√ßos:"
echo "-----------------------"
for service in autocore-gateway autocore-config-app autocore-config-frontend mosquitto; do
    if sudo systemctl is-active --quiet $service; then
        uptime=$(sudo systemctl show $service --property=ActiveEnterTimestamp --value 2>/dev/null)
        echo "‚úÖ $service: ATIVO"
    else
        echo "‚ùå $service: INATIVO"
    fi
done
echo ""

# Verificar portas
echo "üîå Portas Abertas:"
echo "------------------"
netstat -tln 2>/dev/null | grep -E ':(1883|3000|5000)' | while read line; do
    port=$(echo $line | awk '{print $4}' | rev | cut -d: -f1 | rev)
    case $port in
        1883) echo "‚úÖ Porta $port: MQTT Broker" ;;
        3000) echo "‚úÖ Porta $port: Config App Frontend" ;;
        5000) echo "‚úÖ Porta $port: Config App Backend" ;;
    esac
done
echo ""

# Verificar conectividade
echo "üåê Teste de Conectividade:"
echo "--------------------------"

# MQTT
timeout 1 mosquitto_sub -h localhost -u autocore -P autocore123 -t test -C 1 2>/dev/null && echo "‚úÖ MQTT: Conectado" || echo "‚ùå MQTT: Falha"

# Backend API
response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/health 2>/dev/null)
if [ "$response" = "200" ]; then
    echo "‚úÖ Backend API: Respondendo (HTTP $response)"
else
    echo "‚ùå Backend API: N√£o respondendo"
fi

# Frontend
response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 2>/dev/null)
if [ "$response" = "200" ] || [ "$response" = "304" ]; then
    echo "‚úÖ Frontend: Respondendo (HTTP $response)"
else
    echo "‚ùå Frontend: N√£o respondendo"
fi
echo ""

# Verificar recursos
echo "üíª Recursos do Sistema:"
echo "-----------------------"
echo "üß† Mem√≥ria: $(free -h | grep Mem | awk '{print "Total: "$2", Usado: "$3", Livre: "$4}')"
echo "üíæ Disco: $(df -h / | tail -1 | awk '{print "Usado: "$3" de "$2" ("$5")"}')"
echo "üå°Ô∏è Temperatura: $(vcgencmd measure_temp 2>/dev/null || echo 'N/A')"
echo "‚è∞ Uptime: $(uptime -p)"
echo ""

# Verificar logs de erro recentes
echo "‚ö†Ô∏è Erros Recentes (√∫ltimas 2 horas):"
echo "------------------------------------"
ERROR_COUNT=$(sudo journalctl -p err --since "2 hours ago" 2>/dev/null | wc -l)
if [ $ERROR_COUNT -gt 0 ]; then
    echo "Encontrados $ERROR_COUNT erros. √öltimos 5:"
    sudo journalctl -p err --since "2 hours ago" --no-pager | tail -5
else
    echo "‚úÖ Nenhum erro nas √∫ltimas 2 horas"
fi
echo ""

# Verificar processos Python
echo "üêç Processos Python AutoCore:"
echo "-----------------------------"
ps aux | grep -E "(autocore|gateway|config-app)" | grep python | grep -v grep | while read line; do
    pid=$(echo $line | awk '{print $2}')
    cmd=$(echo $line | awk '{for(i=11;i<=NF;i++) printf "%s ", $i; print ""}')
    echo "PID $pid: $cmd"
done
echo ""

# URLs de acesso
echo "üåê URLs de Acesso:"
echo "------------------"
IP=$(hostname -I | awk '{print $1}')
echo "üì± Config App: http://$IP:3000"
echo "üîå Backend API: http://$IP:5000"
echo "ü¶ü MQTT Broker: $IP:1883"
echo ""

# Comandos √∫teis
echo "üìù Comandos √öteis:"
echo "------------------"
echo "Ver logs do gateway:     sudo journalctl -u autocore-gateway -f"
echo "Ver logs do backend:     sudo journalctl -u autocore-config-app -f"
echo "Ver logs do frontend:    sudo journalctl -u autocore-config-frontend -f"
echo "Reiniciar tudo:         sudo systemctl restart autocore-*"
echo "Parar tudo:             sudo systemctl stop autocore-*"
echo ""

# Verificar se precisa de a√ß√µes
NEEDS_ACTION=false
for service in autocore-gateway autocore-config-app autocore-config-frontend; do
    if ! sudo systemctl is-active --quiet $service; then
        NEEDS_ACTION=true
        break
    fi
done

if [ "$NEEDS_ACTION" = true ]; then
    echo "‚ö†Ô∏è A√á√ÉO NECESS√ÅRIA:"
    echo "-------------------"
    echo "Alguns servi√ßos n√£o est√£o rodando."
    echo "Tente executar: sudo systemctl restart autocore-*"
    echo "Para mais detalhes: sudo ./check_status.sh --verbose"
else
    echo "‚úÖ SISTEMA OPERACIONAL"
    echo "----------------------"
    echo "Todos os servi√ßos est√£o rodando normalmente!"
fi
echo ""

# Modo verbose
if [ "$1" = "--verbose" ] || [ "$1" = "-v" ]; then
    echo "üîç MODO DETALHADO"
    echo "=================="
    
    for service in autocore-gateway autocore-config-app autocore-config-frontend; do
        echo ""
        echo "üìã Servi√ßo: $service"
        echo "------------------------"
        sudo systemctl status $service --no-pager | head -20
        echo ""
        echo "üìú √öltimos logs:"
        sudo journalctl -u $service -n 10 --no-pager
        echo ""
    done
fi