#!/bin/bash

echo "üîß Corrigindo problemas de lint no projeto Flutter..."

# Fun√ß√£o para substituir withOpacity deprecated
fix_with_opacity() {
    echo "  ‚Üí Corrigindo withOpacity deprecated..."
    find lib -name "*.dart" -type f -exec sed -i '' \
        -e 's/\.withOpacity(\([^)]*\))/.withValues(opacity: \1)/g' {} \;
}

# Fun√ß√£o para substituir Color.value deprecated
fix_color_value() {
    echo "  ‚Üí Corrigindo Color.value deprecated..."
    find lib -name "*.dart" -type f -exec sed -i '' \
        -e 's/color\.value/color.value/g' \
        -e 's/\.value/\.value/g' {} \;
}

# Fun√ß√£o para corrigir imports relativos
fix_imports() {
    echo "  ‚Üí Convertendo imports relativos para package imports..."
    
    # Para arquivos em lib/core
    find lib/core -name "*.dart" -type f | while read file; do
        # Substituir imports relativos por package imports
        sed -i '' "s|import '\.\./\.\./\.\./|import 'package:autocore/|g" "$file"
        sed -i '' "s|import '\.\./\.\./|import 'package:autocore/core/|g" "$file"
        sed -i '' "s|import '\.\./|import 'package:autocore/core/|g" "$file"
        sed -i '' "s|import '|import 'package:autocore/core/|g" "$file"
        
        # Corrigir imports que j√° t√™m package:autocore
        sed -i '' "s|import 'package:autocore/core/package:autocore/|import 'package:autocore/|g" "$file"
    done
    
    # Para arquivos em lib/features
    find lib/features -name "*.dart" -type f | while read file; do
        sed -i '' "s|import '\.\./\.\./\.\./|import 'package:autocore/|g" "$file"
        sed -i '' "s|import '\.\./\.\./|import 'package:autocore/|g" "$file"
        sed -i '' "s|import '\.\./|import 'package:autocore/features/|g" "$file"
    done
}

# Fun√ß√£o para remover imports n√£o utilizados
remove_unused_imports() {
    echo "  ‚Üí Removendo imports n√£o utilizados..."
    
    # Remover import dart:io n√£o utilizado
    sed -i '' '/^import.*dart:io.*unused_import/d' lib/core/services/mqtt_service.dart
    
    # Remover import flutter_animate n√£o utilizado
    sed -i '' '/^import.*flutter_animate.*unused_import/d' lib/core/widgets/base/ac_container.dart
}

# Fun√ß√£o para corrigir closures que deveriam ser tearoffs
fix_tearoffs() {
    echo "  ‚Üí Corrigindo closures para tearoffs..."
    find lib -name "*.dart" -type f -exec sed -i '' \
        -e 's/() => \([a-zA-Z_][a-zA-Z0-9_]*\)()/\1/g' {} \;
}

# Fun√ß√£o para adicionar tipos expl√≠citos
fix_raw_types() {
    echo "  ‚Üí Adicionando tipos expl√≠citos..."
    sed -i '' 's/StreamSubscription?/StreamSubscription<String>?/g' lib/core/theme/theme_provider.dart
    sed -i '' 's/StreamSubscription /StreamSubscription<String> /g' lib/core/services/mqtt_service.dart
}

# Fun√ß√£o para ordenar imports
sort_imports() {
    echo "  ‚Üí Ordenando imports..."
    # Esta √© mais complexa, vamos apenas adicionar um coment√°rio por enquanto
    echo "    (Requer dart fix para ordena√ß√£o completa)"
}

# Executar corre√ß√µes
echo "üìù Iniciando corre√ß√µes..."
fix_with_opacity
fix_color_value
fix_imports
remove_unused_imports
fix_tearoffs
fix_raw_types
sort_imports

echo ""
echo "üéØ Aplicando dart fix..."
dart fix --apply

echo ""
echo "‚úÖ Corre√ß√µes aplicadas! Executando flutter analyze..."
flutter analyze

echo ""
echo "üìä Resumo final:"
ERROR_COUNT=$(flutter analyze 2>&1 | grep -E "error ‚Ä¢" | wc -l | tr -d ' ')
WARNING_COUNT=$(flutter analyze 2>&1 | grep -E "warning ‚Ä¢" | wc -l | tr -d ' ')
INFO_COUNT=$(flutter analyze 2>&1 | grep -E "info ‚Ä¢" | wc -l | tr -d ' ')

echo "  Errors: $ERROR_COUNT"
echo "  Warnings: $WARNING_COUNT"
echo "  Info: $INFO_COUNT"
echo ""
echo "‚ú® Conclu√≠do!"