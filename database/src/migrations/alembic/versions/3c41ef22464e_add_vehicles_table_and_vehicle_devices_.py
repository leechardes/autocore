"""Add vehicles table and vehicle_devices association

Revision ID: 3c41ef22464e
Revises: 
Create Date: 2025-08-28 14:11:18.421000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3c41ef22464e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('can_signals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('signal_name', sa.String(length=100), nullable=False),
    sa.Column('can_id', sa.String(length=8), nullable=False),
    sa.Column('start_bit', sa.Integer(), nullable=False),
    sa.Column('length_bits', sa.Integer(), nullable=False),
    sa.Column('byte_order', sa.String(length=20), nullable=True),
    sa.Column('data_type', sa.String(length=20), nullable=True),
    sa.Column('scale_factor', sa.Float(), nullable=True),
    sa.Column('offset', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('min_value', sa.Float(), nullable=True),
    sa.Column('max_value', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('signal_name')
    )
    op.create_index('idx_can_signals_id', 'can_signals', ['can_id'], unique=False)
    op.create_index('idx_can_signals_name', 'can_signals', ['signal_name'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('mac_address', sa.String(length=17), nullable=True),
    sa.Column('ip_address', sa.String(length=15), nullable=True),
    sa.Column('firmware_version', sa.String(length=20), nullable=True),
    sa.Column('hardware_version', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('configuration_json', sa.Text(), nullable=True),
    sa.Column('capabilities_json', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mac_address'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_devices_status', 'devices', ['status'], unique=False)
    op.create_index('idx_devices_type', 'devices', ['type'], unique=False)
    op.create_index('idx_devices_uuid', 'devices', ['uuid'], unique=False)
    op.create_table('icons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('svg_content', sa.Text(), nullable=True),
    sa.Column('svg_viewbox', sa.String(length=50), nullable=True),
    sa.Column('svg_fill_color', sa.String(length=7), nullable=True),
    sa.Column('svg_stroke_color', sa.String(length=7), nullable=True),
    sa.Column('lucide_name', sa.String(length=50), nullable=True),
    sa.Column('material_name', sa.String(length=50), nullable=True),
    sa.Column('fontawesome_name', sa.String(length=50), nullable=True),
    sa.Column('lvgl_symbol', sa.String(length=50), nullable=True),
    sa.Column('unicode_char', sa.String(length=10), nullable=True),
    sa.Column('emoji', sa.String(length=10), nullable=True),
    sa.Column('fallback_icon_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['fallback_icon_id'], ['icons.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_icons_active', 'icons', ['is_active'], unique=False)
    op.create_index('idx_icons_category', 'icons', ['category'], unique=False)
    op.create_index('idx_icons_name', 'icons', ['name'], unique=False)
    op.create_table('macros',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('trigger_type', sa.String(length=50), nullable=True),
    sa.Column('trigger_config', sa.Text(), nullable=True),
    sa.Column('action_sequence', sa.Text(), nullable=False),
    sa.Column('condition_logic', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_executed', sa.DateTime(), nullable=True),
    sa.Column('execution_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('screens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('screen_type', sa.String(length=50), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('columns_mobile', sa.Integer(), nullable=True),
    sa.Column('columns_display_small', sa.Integer(), nullable=True),
    sa.Column('columns_display_large', sa.Integer(), nullable=True),
    sa.Column('columns_web', sa.Integer(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('required_permission', sa.String(length=50), nullable=True),
    sa.Column('show_on_mobile', sa.Boolean(), nullable=True),
    sa.Column('show_on_display_small', sa.Boolean(), nullable=True),
    sa.Column('show_on_display_large', sa.Boolean(), nullable=True),
    sa.Column('show_on_web', sa.Boolean(), nullable=True),
    sa.Column('show_on_controls', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['screens.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_screens_parent', 'screens', ['parent_id'], unique=False)
    op.create_index('idx_screens_position', 'screens', ['position'], unique=False)
    op.create_table('themes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('primary_color', sa.String(length=7), nullable=False),
    sa.Column('secondary_color', sa.String(length=7), nullable=False),
    sa.Column('background_color', sa.String(length=7), nullable=False),
    sa.Column('surface_color', sa.String(length=7), nullable=False),
    sa.Column('success_color', sa.String(length=7), nullable=False),
    sa.Column('warning_color', sa.String(length=7), nullable=False),
    sa.Column('error_color', sa.String(length=7), nullable=False),
    sa.Column('info_color', sa.String(length=7), nullable=False),
    sa.Column('text_primary', sa.String(length=7), nullable=False),
    sa.Column('text_secondary', sa.String(length=7), nullable=False),
    sa.Column('border_radius', sa.Integer(), nullable=True),
    sa.Column('shadow_style', sa.String(length=50), nullable=True),
    sa.Column('font_family', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('pin_code', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_role', 'users', ['role'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_table('event_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('target', sa.String(length=100), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=True),
    sa.Column('payload', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=15), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_events_source', 'event_logs', ['source'], unique=False)
    op.create_index('idx_events_timestamp', 'event_logs', ['timestamp'], unique=False)
    op.create_index('idx_events_type', 'event_logs', ['event_type'], unique=False)
    op.create_table('relay_boards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('total_channels', sa.Integer(), nullable=False),
    sa.Column('board_model', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_relay_boards_device', 'relay_boards', ['device_id'], unique=False)
    op.create_table('telemetry_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('data_key', sa.String(length=100), nullable=False),
    sa.Column('data_value', sa.Text(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_telemetry_key', 'telemetry_data', ['data_key'], unique=False)
    op.create_index('idx_telemetry_timestamp', 'telemetry_data', ['timestamp', 'device_id'], unique=False)
    op.create_index('idx_telemetry_type', 'telemetry_data', ['data_type'], unique=False)
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('plate', sa.String(length=10), nullable=False),
    sa.Column('chassis', sa.String(length=30), nullable=False),
    sa.Column('renavam', sa.String(length=20), nullable=False),
    sa.Column('brand', sa.String(length=50), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=100), nullable=True),
    sa.Column('year_manufacture', sa.Integer(), nullable=False),
    sa.Column('year_model', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=30), nullable=True),
    sa.Column('color_code', sa.String(length=10), nullable=True),
    sa.Column('fuel_type', sa.String(length=20), nullable=False),
    sa.Column('engine_capacity', sa.Integer(), nullable=True),
    sa.Column('engine_power', sa.Integer(), nullable=True),
    sa.Column('engine_torque', sa.Integer(), nullable=True),
    sa.Column('transmission', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=30), nullable=False),
    sa.Column('usage_type', sa.String(length=30), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('primary_device_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('odometer', sa.Integer(), nullable=False),
    sa.Column('odometer_unit', sa.String(length=5), nullable=False),
    sa.Column('last_location', sa.Text(), nullable=True),
    sa.Column('next_maintenance_date', sa.DateTime(), nullable=True),
    sa.Column('next_maintenance_km', sa.Integer(), nullable=True),
    sa.Column('insurance_expiry', sa.DateTime(), nullable=True),
    sa.Column('license_expiry', sa.DateTime(), nullable=True),
    sa.Column('inspection_expiry', sa.DateTime(), nullable=True),
    sa.Column('last_maintenance_date', sa.DateTime(), nullable=True),
    sa.Column('last_maintenance_km', sa.Integer(), nullable=True),
    sa.Column('vehicle_config', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_tracked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("category IN ('passenger', 'commercial', 'motorcycle', 'truck', 'bus')", name='check_vehicles_valid_category'),
    sa.CheckConstraint("fuel_type IN ('flex', 'gasoline', 'ethanol', 'diesel', 'electric', 'hybrid')", name='check_vehicles_valid_fuel_type'),
    sa.CheckConstraint("status IN ('active', 'inactive', 'maintenance', 'retired', 'sold')", name='check_vehicles_valid_status'),
    sa.CheckConstraint("year_manufacture >= 1900 AND year_manufacture <= CAST(strftime('%Y', 'now') AS INTEGER)", name='check_vehicles_valid_manufacture_year'),
    sa.CheckConstraint('length(chassis) >= 17', name='check_vehicles_valid_chassis_length'),
    sa.CheckConstraint('length(plate) >= 7 AND length(plate) <= 8', name='check_vehicles_valid_plate_format'),
    sa.CheckConstraint('odometer >= 0', name='check_vehicles_valid_odometer'),
    sa.CheckConstraint('year_model >= year_manufacture AND year_model <= (year_manufacture + 1)', name='check_vehicles_valid_model_year'),
    sa.ForeignKeyConstraint(['primary_device_id'], ['devices.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chassis'),
    sa.UniqueConstraint('plate'),
    sa.UniqueConstraint('renavam'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_vehicles_active', 'vehicles', ['is_active'], unique=False)
    op.create_index('idx_vehicles_brand_model', 'vehicles', ['brand', 'model'], unique=False)
    op.create_index('idx_vehicles_brand_year', 'vehicles', ['brand', 'year_model'], unique=False)
    op.create_index('idx_vehicles_chassis', 'vehicles', ['chassis'], unique=False)
    op.create_index('idx_vehicles_plate', 'vehicles', ['plate'], unique=False)
    op.create_index('idx_vehicles_renavam', 'vehicles', ['renavam'], unique=False)
    op.create_index('idx_vehicles_status', 'vehicles', ['status'], unique=False)
    op.create_index('idx_vehicles_status_active', 'vehicles', ['status', 'is_active'], unique=False)
    op.create_index('idx_vehicles_tracked', 'vehicles', ['is_tracked'], unique=False)
    op.create_index('idx_vehicles_user', 'vehicles', ['user_id'], unique=False)
    op.create_index('idx_vehicles_user_active', 'vehicles', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_vehicles_uuid', 'vehicles', ['uuid'], unique=False)
    op.create_table('relay_channels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.Column('channel_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('function_type', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('protection_mode', sa.String(length=20), nullable=False),
    sa.Column('max_activation_time', sa.Integer(), nullable=True),
    sa.Column('allow_in_macro', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['relay_boards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('board_id', 'channel_number', name='uq_board_channel')
    )
    op.create_index('idx_relay_channels_board', 'relay_channels', ['board_id'], unique=False)
    op.create_table('vehicle_devices',
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('device_role', sa.String(length=30), nullable=True),
    sa.Column('installed_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('vehicle_id', 'device_id')
    )
    op.create_index('idx_vehicle_devices_device', 'vehicle_devices', ['device_id'], unique=False)
    op.create_index('idx_vehicle_devices_role', 'vehicle_devices', ['device_role'], unique=False)
    op.create_index('idx_vehicle_devices_vehicle', 'vehicle_devices', ['vehicle_id'], unique=False)
    op.create_table('screen_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('screen_id', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('size_mobile', sa.String(length=20), nullable=True),
    sa.Column('size_display_small', sa.String(length=20), nullable=True),
    sa.Column('size_display_large', sa.String(length=20), nullable=True),
    sa.Column('size_web', sa.String(length=20), nullable=True),
    sa.Column('action_type', sa.String(length=30), nullable=True),
    sa.Column('action_target', sa.String(length=200), nullable=True),
    sa.Column('action_payload', sa.Text(), nullable=True),
    sa.Column('relay_board_id', sa.Integer(), nullable=True),
    sa.Column('relay_channel_id', sa.Integer(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('data_path', sa.String(length=200), nullable=True),
    sa.Column('data_format', sa.String(length=50), nullable=True),
    sa.Column('data_unit', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("(item_type IN ('display', 'gauge') AND action_type IS NULL) OR (item_type IN ('button', 'switch') AND action_type IS NOT NULL)", name='check_item_action_consistency'),
    sa.CheckConstraint("action_type != 'relay_control' OR (action_type = 'relay_control' AND relay_board_id IS NOT NULL AND relay_channel_id IS NOT NULL)", name='check_relay_control_requirements'),
    sa.CheckConstraint("item_type NOT IN ('display', 'gauge') OR (item_type IN ('display', 'gauge') AND data_source IS NOT NULL AND data_path IS NOT NULL)", name='check_display_data_requirements'),
    sa.ForeignKeyConstraint(['relay_board_id'], ['relay_boards.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['relay_channel_id'], ['relay_channels.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['screen_id'], ['screens.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_screen_items_screen_pos', 'screen_items', ['screen_id', 'position'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_screen_items_screen_pos', table_name='screen_items')
    op.drop_table('screen_items')
    op.drop_index('idx_vehicle_devices_vehicle', table_name='vehicle_devices')
    op.drop_index('idx_vehicle_devices_role', table_name='vehicle_devices')
    op.drop_index('idx_vehicle_devices_device', table_name='vehicle_devices')
    op.drop_table('vehicle_devices')
    op.drop_index('idx_relay_channels_board', table_name='relay_channels')
    op.drop_table('relay_channels')
    op.drop_index('idx_vehicles_uuid', table_name='vehicles')
    op.drop_index('idx_vehicles_user_active', table_name='vehicles')
    op.drop_index('idx_vehicles_user', table_name='vehicles')
    op.drop_index('idx_vehicles_tracked', table_name='vehicles')
    op.drop_index('idx_vehicles_status_active', table_name='vehicles')
    op.drop_index('idx_vehicles_status', table_name='vehicles')
    op.drop_index('idx_vehicles_renavam', table_name='vehicles')
    op.drop_index('idx_vehicles_plate', table_name='vehicles')
    op.drop_index('idx_vehicles_chassis', table_name='vehicles')
    op.drop_index('idx_vehicles_brand_year', table_name='vehicles')
    op.drop_index('idx_vehicles_brand_model', table_name='vehicles')
    op.drop_index('idx_vehicles_active', table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index('idx_telemetry_type', table_name='telemetry_data')
    op.drop_index('idx_telemetry_timestamp', table_name='telemetry_data')
    op.drop_index('idx_telemetry_key', table_name='telemetry_data')
    op.drop_table('telemetry_data')
    op.drop_index('idx_relay_boards_device', table_name='relay_boards')
    op.drop_table('relay_boards')
    op.drop_index('idx_events_type', table_name='event_logs')
    op.drop_index('idx_events_timestamp', table_name='event_logs')
    op.drop_index('idx_events_source', table_name='event_logs')
    op.drop_table('event_logs')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_role', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_table('users')
    op.drop_table('themes')
    op.drop_index('idx_screens_position', table_name='screens')
    op.drop_index('idx_screens_parent', table_name='screens')
    op.drop_table('screens')
    op.drop_table('macros')
    op.drop_index('idx_icons_name', table_name='icons')
    op.drop_index('idx_icons_category', table_name='icons')
    op.drop_index('idx_icons_active', table_name='icons')
    op.drop_table('icons')
    op.drop_index('idx_devices_uuid', table_name='devices')
    op.drop_index('idx_devices_type', table_name='devices')
    op.drop_index('idx_devices_status', table_name='devices')
    op.drop_table('devices')
    op.drop_index('idx_can_signals_name', table_name='can_signals')
    op.drop_index('idx_can_signals_id', table_name='can_signals')
    op.drop_table('can_signals')
    # ### end Alembic commands ###
