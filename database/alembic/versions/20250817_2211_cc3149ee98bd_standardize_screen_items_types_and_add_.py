"""Standardize screen_items types and add constraints

Revision ID: cc3149ee98bd
Revises: 59042b38c022
Create Date: 2025-08-17 22:11:06.504426

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cc3149ee98bd'
down_revision = '59042b38c022'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Primeiro, padroniza dados existentes antes de aplicar constraints
    
    # Atualiza devices.status offline para OFFLINE enum
    op.execute("UPDATE devices SET status = 'OFFLINE' WHERE status = 'offline'")
    op.execute("UPDATE devices SET status = 'ONLINE' WHERE status = 'online'")
    
    # Padroniza protection_mode nos relay_channels
    op.execute("UPDATE relay_channels SET protection_mode = 'NONE' WHERE protection_mode IS NULL")
    
    # Padroniza action_type para displays e gauges (deve ser NULL)
    op.execute("UPDATE screen_items SET action_type = NULL WHERE item_type IN ('display', 'gauge')")
    
    # Garantir que buttons e switches tenham action_type definido
    op.execute("UPDATE screen_items SET action_type = 'relay_control' WHERE item_type IN ('button', 'switch') AND action_type IS NULL AND relay_board_id IS NOT NULL")
    
    # Garantir que displays e gauges tenham data_source e data_path definidos
    op.execute("UPDATE screen_items SET data_source = 'telemetry', data_path = 'default' WHERE item_type IN ('display', 'gauge') AND (data_source IS NULL OR data_path IS NULL)")
    
    # Aplica conversões para Enums usando batch operations (compatível com SQLite)
    with op.batch_alter_table('devices') as batch_op:
        batch_op.alter_column('type',
                   existing_type=sa.VARCHAR(length=50),
                   type_=sa.Enum('ESP32_RELAY', 'ESP32_DISPLAY', 'ESP32_DISPLAY_SMALL', 'ESP32_DISPLAY_LARGE', name='devicetype'),
                   existing_nullable=False)
        batch_op.alter_column('status',
                   existing_type=sa.VARCHAR(length=20),
                   type_=sa.Enum('ONLINE', 'OFFLINE', 'ERROR', 'MAINTENANCE', name='devicestatus'),
                   nullable=False)
    
    with op.batch_alter_table('relay_channels') as batch_op:
        batch_op.alter_column('function_type',
                   existing_type=sa.VARCHAR(length=50),
                   type_=sa.Enum('TOGGLE', 'MOMENTARY', 'PULSE', name='functiontype'),
                   existing_nullable=True)
        batch_op.alter_column('protection_mode',
                   existing_type=sa.VARCHAR(length=20),
                   type_=sa.Enum('NONE', 'CONFIRM', 'PASSWORD', name='protectionmode'),
                   nullable=False)
    
    with op.batch_alter_table('screen_items') as batch_op:
        batch_op.alter_column('item_type',
                   existing_type=sa.VARCHAR(length=50),
                   type_=sa.Enum('DISPLAY', 'BUTTON', 'SWITCH', 'GAUGE', name='itemtype'),
                   existing_nullable=False)
        batch_op.alter_column('action_type',
                   existing_type=sa.VARCHAR(length=50),
                   type_=sa.Enum('RELAY_CONTROL', 'COMMAND', 'MACRO', 'NAVIGATION', name='actiontype'),
                   existing_nullable=True)
    
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Reverte Enums usando batch operations
    with op.batch_alter_table('screen_items') as batch_op:
        batch_op.alter_column('action_type',
                   existing_type=sa.Enum('RELAY_CONTROL', 'COMMAND', 'MACRO', 'NAVIGATION', name='actiontype'),
                   type_=sa.VARCHAR(length=50),
                   existing_nullable=True)
        batch_op.alter_column('item_type',
                   existing_type=sa.Enum('DISPLAY', 'BUTTON', 'SWITCH', 'GAUGE', name='itemtype'),
                   type_=sa.VARCHAR(length=50),
                   existing_nullable=False)
    
    with op.batch_alter_table('relay_channels') as batch_op:
        batch_op.alter_column('protection_mode',
                   existing_type=sa.Enum('NONE', 'CONFIRM', 'PASSWORD', name='protectionmode'),
                   type_=sa.VARCHAR(length=20),
                   nullable=True)
        batch_op.alter_column('function_type',
                   existing_type=sa.Enum('TOGGLE', 'MOMENTARY', 'PULSE', name='functiontype'),
                   type_=sa.VARCHAR(length=50),
                   existing_nullable=True)
    
    with op.batch_alter_table('devices') as batch_op:
        batch_op.alter_column('status',
                   existing_type=sa.Enum('ONLINE', 'OFFLINE', 'ERROR', 'MAINTENANCE', name='devicestatus'),
                   type_=sa.VARCHAR(length=20),
                   nullable=True)
        batch_op.alter_column('type',
                   existing_type=sa.Enum('ESP32_RELAY', 'ESP32_DISPLAY', 'ESP32_DISPLAY_SMALL', 'ESP32_DISPLAY_LARGE', name='devicetype'),
                   type_=sa.VARCHAR(length=50),
                   existing_nullable=False)
    
    # Reverte dados para formato string lowercase
    op.execute("UPDATE devices SET status = lower(status)")
    op.execute("UPDATE relay_channels SET protection_mode = NULL WHERE protection_mode = 'NONE'")
    
    # ### end Alembic commands ###
